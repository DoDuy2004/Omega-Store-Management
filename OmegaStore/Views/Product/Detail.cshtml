@using System.Globalization
@model OmegaStore.Models.Review

@{
    ViewData["Title"] = "Chi tiết sản phẩm";
    var product = ViewBag.product as Product ?? new Product();
    var relatedProducts = ViewBag.relatedProducts as List<Product> ?? new List<Product>();

    var formatPrice = (decimal price) =>
    {
        return price.ToString("N0", new CultureInfo("vi-VN"));
    };
}

@section Styles {
    <link rel="stylesheet" href="~/css/product-detail.css">
}

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script>
        function renderReviews() {
            $.ajax({
                url: "/Product/LoadReviews/@product.Id",
                method: "GET",
                success: function (res) {
                    // Hiển thị số lượt bán
                    $("#sale-count").text(@ViewBag.saleCount);

                    // Hiển thị số lượt yêu thích
                    $("#likes").text("(@ViewBag.likes)");

                    // Hiển thị tỉ lệ 5 sao
                    let fiveStarRate = 0;
                    for (let r of res.reviews) {
                        fiveStarRate += r.rating;
                    }

                    fiveStarRate = (res.reviews.length > 0) 
                        ? fiveStarRate / res.reviews.length : res.reviews.length;
                    $(".info .ratting > span").text(`(${fiveStarRate.toFixed(1)})`);

                    // Hiển thị số lượng đánh giá
                    $("#reviews-count").text(res.reviews.length);

                    let reviewsHTML = "<p>Hiện tại sản phẩm này chưa có đánh giá nào</p>";

                    if (res.reviews.length > 0) {
                        reviewsHTML = $.map(res.reviews, function (r) {
                            // Tạo số sao theo bài đánh giá
                            let starHTML = "";

                            for (let i = 1; i <= r.rating; i++) {
                                starHTML += "<i class='fa fa-star'></i>";
                            }

                            for (let i = 1; i <= 5 - r.rating; i++) {
                                starHTML += "<i class='far fa-star'></i>"
                            }

                            // Trả về chuỗi html các bài đánh giá
                            return `
                                <div class="reviewer">${r.fullname} - <span>${new Date(r.createdAt).toLocaleString("vi-VN")}</span></div>
                                <p>
                                    ${r.comment}
                                </p>
                                <div class="ratting">
                                    ${starHTML}
                                </div>
                            `;
                        }).join('');
                    }

                    // Chèn vào <div> chứa các bài đánh giá
                    $("#reviews > .reviews-submitted").html(reviewsHTML);
                },
                error: function (error) {
                    alert(`Lỗi: ${error}`);
                }
            });
        }

        renderReviews();

        $(document).ready(function () {
            $("#review-form").on("submit", function (e) {
                e.preventDefault();

                Swal.fire({
                    title: "Xác nhận gửi đánh giá?",
                    text: "Đánh giá của bạn sẽ được gửi đi",
                    icon: "info",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Xác nhận",
                    cancelButtonText: "Hủy"
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: "/Product/Comment",
                            method: "POST",
                            data: $(this).serialize(),
                            success: function (res) {
                                if (res.success) {
                                    Swal.fire({
                                        title: "Thành công",
                                        text: "Đánh giá của bạn đã được cập nhật",
                                        icon: "success"
                                    });
                                    // Xóa hết dữ liệu vừa nhập trong form
                                    $("#review-form")[0].reset();
                                    // Hiển thị lại danh sách các đánh giá
                                    renderReviews();
                                } else {
                                    Swal.fire({
                                        icon: "error",
                                        title: res.title,
                                        text: res.text
                                    });
                                }
                            },
                            error: function (error) {
                                alert(`Lỗi: ${error}`);
                            }
                        });
                    }
                });
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            const stock = parseInt('@product.Stock');
            const $btnAddCart = $("#btn-add-cart");
            const $btnMinus = $("#minus");
            const $btnPlus = $("#plus");
            const $quantityInput = $("#product-quantity");
            const $error = $("#error");

            $quantityInput.on("keyup", function () {
                let quantityInput = parseInt($(this).val());
                if (quantityInput > stock) {
                    $(this).val(stock);
                }
                checkQuantity(quantityInput);
            });

            $btnMinus.on("click", function () {
                let quantityInput = parseInt($quantityInput.val());
                checkQuantity(quantityInput);
            });

            $btnPlus.on("click", function () {
                let quantityInput = parseInt($quantityInput.val());
                checkQuantity(quantityInput);
            });

            function checkQuantity(quantity) {
                if (quantity < 1) {
                    $error.html("Số lượng không được nhỏ hơn 1").show();
                    $btnAddCart.prop("disabled", true);
                    $btnMinus.prop("disabled", true);
                    $btnPlus.prop("disabled", false);
                } else if (quantity >= stock) {
                    $error.html("Đã đạt giới hạn số lượng tồn kho").show();
                    $btnPlus.prop("disabled", true);
                    $btnMinus.prop("disabled", false);
                } else {
                    $error.hide();
                    $btnAddCart.prop("disabled", false);
                    $btnPlus.prop("disabled", false);
                    $btnMinus.prop("disabled", false);
                }
            }
        });
    </script>

    <script>
        $(document).ready(function () {
            function notiWishList(res) {
                const Toast = Swal.mixin({
                    toast: true,
                    position: "top-end",
                    showConfirmButton: false,
                    timer: 1200,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.onmouseenter = Swal.stopTimer;
                        toast.onmouseleave = Swal.resumeTimer;
                    }
                });
                Toast.fire({
                    icon: res.icon,
                    title: res.title
                }).then(() => window.location.reload());
            }

            $("#wishlist-add-btn").on("click", function () {
                $.ajax({
                    url: "/Account/AddWishList/@product.Id",
                    method: "POST",
                    success: function (res) {
                        notiWishList(res);
                    }
                });
            });

            $("#wishlist-del-btn").on("click", function () {
                $.ajax({
                    url: "/Account/DelWishList/@product.Id",
                    method: "POST",
                    success: function (res) {
                        notiWishList(res);
                    }
                });
            });
        });
    </script>
}

<!-- Breadcrumb Start -->
<div class="breadcrumb-wrap">
    <div class="container">
        <ul class="breadcrumb">
            <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Trang chủ</a></li>
            <li class="breadcrumb-item active">Chi tiết sản phẩm</li>
        </ul>
    </div>
</div>
<!-- Breadcrumb End -->
<!-- Product Detail Start -->
<div class="product-detail">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="product-detail-top">
                    <div class="row">
                        <div class="col-md-5">
                            <div class="product-slider-single normal-slider">
                                @foreach (var p in product.ProductsImages)
                                {
                                    <img src="~/img/products/@p.Image">
                                }
                            </div>
                            <div class="product-slider-single-nav normal-slider">
                                @foreach (var p in product.ProductsImages)
                                {
                                    <div class="slider-nav-img"><img src="~/img/products/@p.Image"></div>
                                }
                            </div>
                        </div>
                        <div class="col-md-7">
                            <div class="product-content">
                                <div class="title mb-5">
                                    <h2>@product.Name</h2>
                                </div>
                                <div class="info">
                                    <h4>Mã:</h4>
                                    <p>@product.ProductCode</p>
                                </div>
                                <div class="price">
                                    <h4>Giá:</h4>
                                    <p>@formatPrice(Math.Truncate(product.Price * (1 - (decimal)product.DiscountRate / 100)))đ <span style="font-size: 18px;">@formatPrice(Math.Truncate(product.Price))đ</span></p>
                                </div>
                                <div class="info">
                                    <h4>Trạng thái:</h4>
                                    <p>@(product.Stock > 0 ? "còn hàng" : "hết hàng") <span>(@product.Stock)</span></p>
                                </div>
                                <div class="quantity mt-3">
                                    <div class="qty border border-secondary rounded-lg">
                                        <button class="btn-minus rounded-left" id="minus"><i
                                                class="fa fa-minus"></i></button>
                                        <input type="text" value="1" id="product-quantity">
                                        <button class="btn-plus rounded-right" id="plus"><i
                                                class="fa fa-plus"></i></button>
                                    </div>
                                    <p id="error" class="text-danger"></p>
                                </div>
                                <div class="d-flex justify-content-between font-weight-bold mb-4">
                                    <div class="flex-grow-1">Lượt bán: <span id="sale-count"></span></div>
                                    <div class="flex-grow-1">
                                        <i class="fa fa-heart text-danger"></i>
                                        <span id="likes"></span>
                                    </div>
                                    <div class="info flex-grow-1">
                                        <div class="ratting">
                                            <i class="fa fa-star"></i>
                                            <i class="fa fa-star"></i>
                                            <i class="fa fa-star"></i>
                                            <i class="fa fa-star"></i>
                                            <i class="fa fa-star"></i>
                                            <span></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="action d-flex ">
                                    <div class="btn-add-cart">
                                        <button class="btn btn-outline-info" id="btn-add-cart" data-id="@product.Id" @(product.Stock > 0 ? "" : "disabled")>
                                            <i class="fa fa-shopping-cart"></i> Thêm vào giỏ hàng
                                        </button>
                                    </div>
                                    @if (Context.Session.GetString("Username") != null && ViewBag.isAddedWishlist == null)
                                    {
                                        <button type="button" class="btn btn-outline-danger ml-3" id="wishlist-add-btn">
                                            <i class="fa fa-heart d-inline-block mr-1"></i>Yêu thích
                                        </button>
                                    }
                                    else if (Context.Session.GetString("Username") != null && ViewBag.isAddedWishlist != null)
                                    {
                                        <button type="button" class="btn btn-outline-danger ml-3" id="wishlist-del-btn">
                                            <i class="fa fa-heart d-inline-block mr-1"></i>Hủy yêu thích
                                        </button>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row product-detail-bottom">
                    <div class="col-lg-12">
                        <ul class="nav nav-pills nav-justified">
                            <li class="nav-item">
                                <a class="nav-link active" data-toggle="pill" href="#description">Mô tả</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-toggle="pill" href="#reviews">Đánh giá (<span
                                        id="reviews-count"></span>)</a>
                            </li>
                        </ul>
                        <div class="tab-content">
                            <div id="description" class="container tab-pane active overflow-auto"
                                style="height: 500px;">
                                @Html.Raw(product.Description)
                            </div>
                            <div id="reviews" class="container tab-pane fade">
                                <div class="reviews-submitted overflow-auto" style="max-height: 250px;">
                                    
                                </div>
                                <form id="review-form" method="post">
                                    <input type="hidden" name="ProductId" value="@product.Id" />
                                    <div class="reviews-submit">
                                        <h4>Đánh giá của bạn:</h4>
                                        <div class="ratting d-flex justify-content-end flex-row-reverse">
                                            @for (var i = 5; i >= 1; i--)
                                            {
                                                <input type="radio" name="Rating" value="@i" id="rate-@i" @(i == 5 ?
                                                "checked" : "") />
                                                <label for="rate-@i" class="fas fa-star"></label>
                                            }
                                        </div>
                                        <div class="row form">
                                            <div class="col-sm-6">
                                                <input asp-for="Fullname" type="text" placeholder="Họ tên">
                                                <span asp-validation-for="Fullname" class="text-danger"></span>
                                            </div>
                                            <div class="col-sm-6">
                                                <input asp-for="Email" type="email" placeholder="Email">
                                                <span asp-validation-for="Email" class="text-danger"></span>
                                            </div>
                                            <div class="col-sm-12">
                                                <textarea asp-for="Comment" placeholder="Nội dung đánh giá"></textarea>
                                                <span asp-validation-for="Comment" class="text-danger"></span>
                                            </div>
                                            <div class="col-sm-12">
                                                <button class="btn btn-outline-info">Đánh giá</button>
                                            </div>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Product Detail End -->

@if (relatedProducts.Count > 0)
{
    <div class="product py-3 mb-4">
        <div class="container">
            <div class="section-header">
                <h1>Sản Phẩm Liên Quan</h1>
            </div>
            @await Html.PartialAsync("_ProductSliderPartial", relatedProducts)

        </div>
    </div>
}